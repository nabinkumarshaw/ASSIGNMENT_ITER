Q3.	Write a Java program that uses StringBuffer to construct a simple text editor which can perform the following operations:
a.	Append a given string to the existing text.
b.	Insert a given string at a specified index within the existing text.
c.	Delete a portion of text between two specified indices.
d.	Reverse the entire text.
e.	Replace a portion of the text between two specified indices with a given string.
Your program should display a menu with options to perform each of the above operations. After each operation, print the current state of the text. Also, display the current capacity and length of the StringBuffer after each operation to showcase its dynamic nature.

//code
import java.util.Scanner;

public class Q3 {
    public static void main(String[] args) {
        StringBuffer sb = new StringBuffer();
        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println("\nText Editor Menu:");
            System.out.println("1. Append text");
            System.out.println("2. Insert text");
            System.out.println("3. Delete text");
            System.out.println("4. Reverse text");
            System.out.println("5. Replace text");
            System.out.println("6. Exit");
            System.out.print("Enter your choice: ");

            int choice = sc.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter text to append: ");
                    String appendText = sc.nextLine();
                    sb.append(appendText);
                    break;
                case 2:
                    System.out.print("Enter index to insert at: ");
                    int insertIndex = sc.nextInt();
                    System.out.print("Enter text to insert: ");
                    String insertText = sc.nextLine();
                    sb.insert(insertIndex, insertText);
                    break;
                case 3:
                    System.out.print("Enter start index to delete: ");
                    int startIndex = sc.nextInt();
                    System.out.print("Enter end index to delete: ");
                    int endIndex = sc.nextInt();
                    sb.delete(startIndex, endIndex);
                    break;
                case 4:
                    sb.reverse();
                    break;
                case 5:
                    System.out.print("Enter start index to replace: ");
                    int replaceStartIndex = sc.nextInt();
                    System.out.print("Enter end index to replace: ");
                    int replaceEndIndex = sc.nextInt();
                    System.out.print("Enter replacement text: ");
                    String replacementText = sc.nextLine();
                    sb.replace(replaceStartIndex, replaceEndIndex, replacementText);
                    break;
                default:
                    System.out.println("Invalid choice! Please enter a number between 1 and 6.");
            }

            // Display current state of text, capacity, and length
            System.out.println("Current text: " + sb);
            System.out.println("Current capacity: " + sb.capacity());
            System.out.println("Current length: " + sb.length());
        }
    }
}


