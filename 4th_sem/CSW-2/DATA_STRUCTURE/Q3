Create a class Country containing members for name and population, along with a 
constructor and necessary methods. Additionally, create a class BNode with a member 'info' to 
store a country object, 'left' to refer to the left child, and 'right' to refer to the right child. Provide 
the required constructor. Finally, create another class BST with a member 'root', along with the 
necessary constructor and a method to insert a node into the binary search tree.

//code

package Data_Structure_Assignment;
class Country {
    String name;
    int population;

    public Country(String name, int population) {
        this.name = name;
        this.population = population;
    }
}

class BNode {
    Country info;
    BNode left;
    BNode right;

    public BNode(Country country) {
        this.info = country;
        this.left = null;
        this.right = null;
    }
}

class BST {
    BNode root;

    public BST() {
        this.root = null;
    }

    public void insert(Country country) {
        if (country == null) {
            return;
        }

        if (root == null) {
            root = new BNode(country);
        } else {
            insertRecursive(root, country);
        }
    }

    private void insertRecursive(BNode node, Country c) {
        if (c.name.compareTo(node.info.name) < 0) {
            if (node.left == null) {
                node.left = new BNode(c);
            } else {
                insertRecursive(node.left, c);
            }
        } else if (c.name.compareTo(node.info.name) > 0) {
            if (node.right == null) {
                node.right = new BNode(c);
            } else {
                insertRecursive(node.right, c);
            }
        }
    }
}
public class Q3 {
    private static void inorderTraversal(BNode node) {
        if (node != null) {
            inorderTraversal(node.left);
            System.out.println(node.info.name);
            inorderTraversal(node.right);
        }
    }
    public static void main(String[] args) {
        // Create countries
        Country usa = new Country("USA", 328_200_000);
        Country china = new Country("China", 1_394_000_000);
        Country india = new Country("India", 1_366_000_000);
        Country brazil = new Country("Brazil", 211_000_000);
        Country russia = new Country("Russia", 146_000_000);

        // Create BST and insert countries
        BST bst = new BST();
        bst.insert(usa);
        bst.insert(china);
        bst.insert(india);
        bst.insert(brazil);
        bst.insert(russia);

        // Perform inorder traversal to print countries in alphabetical order
        System.out.println("Countries in alphabetical order:");
        inorderTraversal(bst.root);
    }
}


//output
Countries in alphabetical order:
Brazil
China
India
Russia
USA
